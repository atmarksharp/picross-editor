<project name="picross-editor" default="compile-run" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">
  <property name="version" value="0.0.1"/>
  <property name="jar-name" value="picross-editor"/>
  <property name="main-class" value="picross.PicrossEditor"/>

  <property name="src" value="src/main" />
  <property name="test" value="src/test" />
  <property name="lib" value="lib"/>
  <property name="build" value="build"/>
  <property name="javac" value="javac"/>

  <path id="lib.path.id">
    <fileset dir="${lib}"/>
  </path>

  <!-- ivy dependency resolver -->
  <target name="resolve">
    <ivy:retrieve pattern="${lib}/[artifact].[ext]"/>
  </target>

  <!-- test -->
  <target name="test" depends="compile">
    <junit printsummary="yes">
      <classpath>
        <pathelement path="${build}/classes"/>
        <pathelement path="${build}/test"/>
        <fileset dir="${lib}" includes="junit.jar"/>
        <fileset dir="${lib}" includes="hamcrest-core.jar"/>
      </classpath>
      <formatter type="plain" usefile="false"/>
      <batchtest>
        <fileset dir="${build}/test">
          <include name="**/*Test.class"/>
        </fileset>
      </batchtest>
    </junit>
  </target>

  <!-- compile -->
  <target name="compile" depends="resolve">
    <mkdir dir="${build}/classes" />
    <javac srcdir="${src}" destdir="${build}/classes" classpathref="lib.path.id" target="1.6" source="1.6" executable="${javac}" encoding="UTF-8"/>

    <mkdir dir="${build}/test"/>
    <javac srcdir="${test}" destdir="${build}/test" classpath="${build}/classes" classpathref="lib.path.id" target="1.6" source="1.6" executable="${javac}" encoding="UTF-8"/>
  </target>

  <!-- run -->
  <target name="run">
    <java classname="${main-class}" classpath="${build}/classes" classpathref="lib.path.id">
      <arg value="examples/e.txt"/>
    </java>
  </target>

  <!-- compile-run -->
  <target name="compile-run" depends="compile,run">
  </target>

  <!-- jar -->
  <target name="jar" depends="compile">
    <delete file="${build}/jar/${jar-name}-${version}.jar"/>
    <mkdir dir="${build}/jar" />
    <jar basedir="${build}/classes" jarfile="${build}/jar/${jar-name}-${version}.jar">
      <restrict>
        <name name="**/*.class"/>
         <archives>
          <zips>
            <zipfileset dir="${lib}">
             <include name="**/*.jar"/>
             <exclude name="**/junit.jar"/> 
             <exclude name="**/hamcrest-core.jar"/> 
            </zipfileset>
          </zips>
        </archives>
      </restrict>
      <manifest>
        <attribute name="Main-Class" value="${main-class}"/>
      </manifest>
    </jar>
  </target>

  <!-- run-jar -->
  <target name="run-jar">
    <java jar="${build}/jar/${jar-name}-${version}.jar" fork="true"/>
  </target>
  
  <!-- run-jar -->
  <target name="clean">
    <delete dir="${build}"/>
    <delete dir="${lib}"/>
  </target>

</project>